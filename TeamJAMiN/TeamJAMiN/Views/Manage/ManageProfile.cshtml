@model TeamJAMiN.Models.ManageProfileViewModel
@{
    ViewBag.Title = "Manage Profile";
}

<h2>@ViewBag.Title.</h2>

@using (Html.BeginForm("ManageProfile", "Manage", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    @Html.AntiForgeryToken()
    <h4>Create a new account.</h4>
    <hr />
    <div class="form-group">
        @Html.LabelFor(m => m.FirstName, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.FirstName, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.LastName, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.LastName, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Birthday, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(model => model.Birthday, new { @class = "form-control", type = "date", placeholder = "Enter birthday here..." })
            @Html.ValidationMessageFor(model => model.Birthday)
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.City, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.City, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.State, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.State, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Private, new { @class = "col-md-2 control-label" })
        <div class="btn-group" data-toggle="buttons">
            <label class="btn btn-primary active">
                @Html.RadioButtonFor(m => m.Private, false, new { Checked = "checked" }) Public
            </label>
            <label class="btn btn-primary">
                @Html.RadioButtonFor(m => m.Private, true) Private
            </label>
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.AllowEmails, new { @class = "col-md-2 control-label" })
        <div class="btn-group" data-toggle="buttons">
            <label class="btn btn-primary active">
                @Html.RadioButtonFor(m => m.AllowEmails, true, new { Checked = "checked" }) Yes
            </label>
            <label class="btn btn-primary">
                @Html.RadioButtonFor(m => m.AllowEmails, false) No
            </label>
        </div>
    </div>
    @Html.ValidationSummary("", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(m => m.UserName, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.UserName, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Email, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" class="btn btn-default" value="Update" />
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}